# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-17 07:10
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_crypto_fields.fields.encrypted_char_field
import django_crypto_fields.fields.firstname_field
import django_crypto_fields.fields.identity_field
import django_crypto_fields.fields.lastname_field
import django_extensions.db.fields
import django_revision.revision_field
import edc_base.model.fields.custom_fields
import edc_base.model.fields.hostname_modification_field
import edc_base.model.fields.userfield
import edc_base.model.fields.uuid_auto_field
import edc_base.model.validators.date
import edc_protocol.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abstraction',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('height_measured', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Was height measured at this clinic visit?')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='Height at Current Clinic Visit')),
                ('weight_measured', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Was weight measured at this clinic visit?')),
                ('weight', models.IntegerField(blank=True, null=True, verbose_name='Weight at Current Clinic Visit')),
                ('hospitalized', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], max_length=25, verbose_name='Has the patient been hospitalized since last visit?')),
                ('hospitalized_date', models.DateField(blank=True, null=True, verbose_name='What was the date of the hospitalization?')),
                ('hospitalized_reason', models.CharField(blank=True, max_length=25, null=True, verbose_name='What was the reason for the hospitalization?')),
                ('tb', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Has the patient been diagnosed with TB since the last visit?')),
                ('tb_type', models.CharField(blank=True, choices=[('pulmonary_tb', 'Pulmonary TB'), ('non-pulmonary_tb', 'Non-pulmonary TB')], max_length=25, null=True, verbose_name='Type of TB')),
                ('tb_method', models.CharField(blank=True, choices=[('culture_positive', 'Culture Positive'), ('cxr', 'CXR'), ('other_imaging_modality', 'Other Imaging Modality'), ('clinical_diagnosis', 'Clinical Diagnosis'), ('other_(describe)', 'Other (describe)')], max_length=25, null=True, verbose_name='Method of TB diagnosis')),
                ('tb_method_other', models.CharField(blank=True, max_length=25, null=True, verbose_name='Method of TB diagnosis: Other')),
                ('io', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Non-TB Opportunistic Infections since last visit')),
                ('ctx', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Has this patient used Cotrimoxazole /Dapsone Prophylaxis since last visit?')),
                ('ctx_table', models.CharField(blank=True, choices=[('cotrimoxazole', 'Cotrimoxazole'), ('dapsone', 'Dapsone')], max_length=25, null=True, verbose_name='Did the patient receive Cotrimoxazole or Dapsone prophylaxis')),
                ('pregnant_and_rx', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Has this patient been pregnant while on treatment?')),
                ('pregnant_and_rx_table', models.CharField(max_length=25, verbose_name='Details of pregnancies while on treatment')),
                ('hiv_status_aware', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], max_length=25, verbose_name='Is there evidence that disclosure has been made to the youth/adolescent that they are HIV-infected?')),
                ('hiv_status_aware_date', models.DateField(blank=True, null=True, verbose_name='Date of disclosure')),
                ('hiv_disclosed_others', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], max_length=25, null=True, verbose_name='Is there evidence that the individual has disclosed their HIV status to others?')),
                ('hiv_caregiver_disclosed_others', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], max_length=25, verbose_name='For youth and adolescents, is there evidence that the caregiver has disclosed their HIV status to others?')),
                ('transferred', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Transfer of Care')),
                ('transferred_table', models.CharField(max_length=25, verbose_name='Transfer of Care Details')),
                ('transferred_to', models.CharField(blank=True, choices=[('into_idcc', 'Into IDCC'), ('out_of_idcc', 'Out of IDCC'), ('into_private_clinic', 'Into Private Clinic'), ('out_of_private_clinic', 'Out of Private Clinic'), ('into_bipai', 'Into BIPAI'), ('out_of_bipai', 'Out of BIPAI'), ('other_(describe)', 'Other (Describe)')], max_length=25, null=True, verbose_name='Location of transfer')),
                ('transferred_to_other', models.CharField(blank=True, max_length=25, null=True, verbose_name='Location of transfer: Other')),
                ('deceased', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name="Is there documentation of mortality on the patient's chart?")),
                ('death_date', models.DateField(blank=True, null=True, validators=[edc_base.model.validators.date.date_not_future], verbose_name='Date of Death')),
                ('death_cause', models.CharField(blank=True, max_length=25, null=True, verbose_name='Cause of Death')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('subject_identifier', models.CharField(editable=False, max_length=50, verbose_name='Subject Identifier')),
                ('timepoint_status', models.CharField(choices=[('open', 'Open'), ('feedback', 'Feedback'), ('closed', 'Closed')], default='open', max_length=15)),
                ('timepoint_opened_datetime', models.DateTimeField(editable=False, help_text="the original calculated model's datetime, updated in the signal", null=True)),
                ('timepoint_closed_datetime', models.DateTimeField(editable=False, null=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('visit_schedule_name', models.CharField(help_text='the name of the visit schedule used to find the "schedule"', max_length=25, null=True)),
                ('schedule_name', models.CharField(help_text='the name of the schedule used to find the list of "visits" to create appointments', max_length=25, null=True)),
                ('visit_code', models.CharField(max_length=25, null=True)),
                ('best_appt_datetime', models.DateTimeField(editable=False, null=True)),
                ('appt_close_datetime', models.DateTimeField(editable=False, null=True)),
                ('visit_instance', models.CharField(blank=True, db_index=True, default='0', help_text='A decimal to represent an additional report to be included with the original visit report. (NNNN.0)', max_length=1, null=True, validators=[django.core.validators.RegexValidator('[0-9]', 'Must be a number from 0-9')], verbose_name='Instance')),
                ('visit_code_sequence', models.IntegerField(blank=True, default=0, help_text='An integer to represent the sequence of additional appointments relative to the base appointment, 0, needed to complete data collection for the timepoint. (NNNN.0)', null=True, verbose_name='Sequence')),
                ('appt_datetime', models.DateTimeField(db_index=True, verbose_name='Appointment date and time')),
                ('appt_type', models.CharField(choices=[('clinic', 'In clinic'), ('telephone', 'By telephone'), ('home', 'At home')], default='clinic', help_text='Default for subject may be edited Subject Configuration.', max_length=20, verbose_name='Appointment type')),
                ('appt_status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('incomplete', 'Incomplete'), ('done', 'Done'), ('cancelled', 'Cancelled')], db_index=True, default='new', max_length=25, verbose_name='Status')),
                ('appt_reason', models.CharField(blank=True, help_text='Reason for appointment', max_length=25, verbose_name='Reason for appointment')),
                ('comment', models.CharField(blank=True, max_length=250, verbose_name='Comment')),
                ('is_confirmed', models.BooleanField(default=False, editable=False)),
                ('consent_version', models.CharField(default='?', editable=False, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ARTRegimen',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10)),
                ('display_name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentHistory',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('cd4_count', models.IntegerField(blank=True, null=True, verbose_name='CD4+ Cell Count')),
                ('cd4_perc', models.IntegerField(blank=True, null=True, verbose_name='CD4+ %')),
                ('vl_count', models.CharField(blank=True, max_length=25, null=True, verbose_name='Viral Load')),
                ('alt', models.IntegerField(blank=True, null=True, verbose_name='ALT(SGPT)')),
                ('hgb', models.IntegerField(blank=True, null=True, verbose_name='Hgb')),
                ('ldl', models.IntegerField(blank=True, null=True, verbose_name='LDL')),
                ('syphillis', models.IntegerField(blank=True, null=True, verbose_name='Syphillis')),
                ('test_other', models.IntegerField(blank=True, null=True, verbose_name='Other (add option to "click to add more fields)')),
            ],
        ),
        migrations.CreateModel(
            name='CollectedData',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('arv_changes', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNCERTAIN', 'Unable to ascertain')], max_length=20, verbose_name='Has the patient had an changes to his/her ARV regimen since previous visit?')),
                ('tb_diagnosis', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNCERTAIN', 'Unable to ascertain')], max_length=20, verbose_name='Has the patient been diagnosed with TB since the last visit?')),
                ('oi_diagnosis', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNCERTAIN', 'Unable to ascertain')], max_length=20, verbose_name='Has the patient been diagnosed with any new opportunistic infections since the last visit?')),
                ('preg_diagnosis', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNCERTAIN', 'Unable to ascertain')], max_length=20, verbose_name='Has this patient been diagnosed with a new pregnancy since the last visit?')),
                ('counselling_adhere', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNCERTAIN', 'Unable to ascertain')], max_length=20, verbose_name='Was there any adherence counseling performed at this visit?')),
                ('transfer', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNCERTAIN', 'Unable to ascertain')], max_length=20, verbose_name='Has this patient been transferred in or out of the clinic since the last visit?')),
                ('death', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNCERTAIN', 'Unable to ascertain')], max_length=20, verbose_name='Has this patient died since the last visit?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=20)),
                ('initials', models.CharField(max_length=3)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True, verbose_name='Gender')),
                ('dob', models.DateField(help_text='Format is YYYY-MM-DD', null=True, verbose_name='Date of birth')),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_eligible', models.BooleanField(default=True)),
                ('initial_visit_date', models.DateField(validators=[edc_base.model.validators.date.date_not_future], verbose_name='Date of Initial Clinic Visit')),
                ('caregiver_relation', models.CharField(blank=True, choices=[('mother', 'Mother'), ('father', 'Father'), ('grandmother', 'Grandmother'), ('grandfather', 'Grandfather'), ('aunt', 'Aunt'), ('uncle', 'Uncle'), ('legal_guardian', 'Legal Guardian'), ('not_applicable', 'Not Applicable'), ('OTHER', 'Other, specify')], default=None, help_text="Please describe the caregiver/next of kin's relationship to patient", max_length=25, verbose_name='Caregiver/Next of Kin Relationship')),
                ('caregiver_relation_other', models.CharField(blank=True, max_length=25, null=True, verbose_name='Caregiver/Next of Kin Relationship: "Other"')),
                ('weight_measured', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Weight was measured at Initial Clinic Visit')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Weight in kg')),
                ('height_measured', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Height was measured at Initial Clinic Visit')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Height in cm')),
                ('hiv_diagnosis_date', models.DateField(blank=True, help_text='Leave blank if diagnosis date is same as initial visit date', null=True, validators=[edc_base.model.validators.date.date_not_future], verbose_name='HIV Diagnosis Date ')),
                ('art_initiation_date', models.DateField(validators=[edc_base.model.validators.date.date_not_future], verbose_name='ART Initiation Date')),
            ],
        ),
        migrations.CreateModel(
            name='Oi',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10)),
                ('death_cause', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredSubject',
            fields=[
                ('subject_identifier', models.CharField(editable=False, max_length=50, unique=True, verbose_name='Subject Identifier')),
                ('subject_identifier_as_pk', models.CharField(editable=False, max_length=50, verbose_name='Subject Identifier as pk')),
                ('subject_identifier_aka', models.CharField(editable=False, help_text='track a previously allocated identifier.', max_length=50, null=True, verbose_name='Subject Identifier a.k.a')),
                ('first_name', django_crypto_fields.fields.firstname_field.FirstnameField(help_text=' (Encryption: RSA local)', max_length=71, null=True)),
                ('last_name', django_crypto_fields.fields.lastname_field.LastnameField(help_text=' (Encryption: RSA local)', max_length=71, null=True, verbose_name='Last name')),
                ('initials', django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(help_text=' (Encryption: RSA local)', max_length=71, null=True, validators=[django.core.validators.RegexValidator(message='Ensure initials consist of letters only in upper case, no spaces.', regex='^[A-Z]{2,3}$')])),
                ('dob', models.DateField(help_text='Format is YYYY-MM-DD', null=True, verbose_name='Date of birth')),
                ('is_dob_estimated', edc_base.model.fields.custom_fields.IsDateEstimatedField(choices=[('-', 'No'), ('D', 'Yes, estimated the Day'), ('MD', 'Yes, estimated Month and Day'), ('YMD', 'Yes, estimated Year, Month and Day')], help_text='If the exact date is not known, please indicate which part of the date is estimated.', max_length=25, null=True, verbose_name='Is date of birth estimated?')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True, verbose_name='Gender')),
                ('subject_consent_id', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_identifier', models.CharField(blank=True, max_length=36, null=True)),
                ('sid', models.CharField(blank=True, max_length=15, null=True, verbose_name='SID')),
                ('study_site', models.CharField(blank=True, max_length=50, null=True)),
                ('relative_identifier', models.CharField(blank=True, help_text="For example, mother's identifier, if available / appropriate", max_length=25, null=True, verbose_name='Identifier of immediate relation')),
                ('identity', django_crypto_fields.fields.identity_field.IdentityField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, null=True)),
                ('identity_type', edc_base.model.fields.custom_fields.IdentityTypeField(blank=True, choices=[('OMANG', 'Omang'), ('DRIVERS', "Driver's License"), ('PASSPORT', 'Passport'), ('OMANG_RCPT', 'Omang Receipt'), ('OTHER', 'Other')], max_length=15, null=True, verbose_name='What type of identity number is this?')),
                ('screening_identifier', models.CharField(blank=True, max_length=36, null=True)),
                ('screening_datetime', models.DateTimeField(blank=True, null=True)),
                ('screening_age_in_years', models.IntegerField(blank=True, null=True)),
                ('registration_datetime', models.DateTimeField(blank=True, null=True)),
                ('randomization_datetime', models.DateTimeField(blank=True, null=True)),
                ('registration_status', models.CharField(blank=True, max_length=25, null=True, verbose_name='Registration status')),
                ('comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment')),
                ('additional_key', models.CharField(default=None, editable=False, help_text='A uuid (or some other text value) to be added to bypass the unique constraint of just firstname, initials, and dob.The default constraint proves limiting since the source model usually has some otherattribute in additional to first_name, initials and dob which is not captured in this model', max_length=36, null=True, verbose_name='-')),
                ('dm_comment', models.CharField(editable=False, max_length=150, null=True, verbose_name='Data Management comment')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectVisit',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(help_text='Date and time of this report', validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model.validators.date.datetime_not_future], verbose_name='Visit Date and Time')),
                ('reason', models.CharField(help_text='<Override the field class for this model field attribute in ModelForm>', max_length=25, verbose_name='What is the reason for this visit?')),
                ('study_status', models.CharField(help_text='<Override the field class for this model field attribute in ModelForm>', max_length=50, verbose_name="What is the participant's current study status")),
                ('require_crfs', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=10, verbose_name='Are scheduled data being submitted with this visit?')),
                ('reason_missed', models.CharField(blank=True, max_length=35, null=True, verbose_name="If 'missed' above, Reason scheduled visit was missed")),
                ('info_source', models.CharField(max_length=25, verbose_name='What is the main source of this information?')),
                ('info_source_other', edc_base.model.fields.custom_fields.OtherCharField(blank=True, editable=True, verbose_name='...if "Other", specify')),
                ('survival_status', models.CharField(choices=[('alive', 'Alive'), ('dead', 'Dead'), ('unknown', 'Unknown')], default='alive', max_length=10, null=True, verbose_name="Participant's survival status")),
                ('last_alive_date', models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model.validators.date.date_not_future], verbose_name='Date participant last known alive')),
                ('comments', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment if any additional pertinent information about the participant')),
                ('subject_identifier', models.CharField(editable=False, help_text='updated automatically', max_length=50, verbose_name='subject_identifier')),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ba_namotswe.Appointment')),
            ],
        ),
        migrations.CreateModel(
            name='TBHistory',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('tb_date', models.DateField(validators=[edc_base.model.validators.date.date_not_future], verbose_name='Date of TB diagnosis')),
                ('tb_type', models.CharField(choices=[('PULMONARY TB', 'Pulmonary TB'), ('NON PULMONARY TB', 'Non pulmonary TB')], max_length=30, verbose_name='Type of TB')),
                ('tb_test', models.CharField(choices=[('CULTURE POSITIVE', 'Culture Positive'), ('CXR', 'CXR'), ('OTHER IMAGING MODALITY', 'Other Imaging Modality'), ('CLINICAL DIAGNOSIS', 'Clinical Diagnosis'), ('OTHER', 'Other, describe')], max_length=30, verbose_name='Method of TB diagnosis')),
                ('tb_test_other', models.CharField(blank=True, max_length=50, null=True, verbose_name='Method of TB diagnosis: Other')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='keletso-mac', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('perinatal_infection', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], max_length=25, verbose_name='Is this an individual who was perinatally infected? (Dx. Prior to 10 years of age)')),
                ('pmtct', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], max_length=25, null=True, verbose_name='Did the mother of the individual receive antiretrovirals during pregnancy?')),
                ('pmtct_rx', models.CharField(blank=True, choices=[('azt_monotherapy', 'AZT Monotherapy'), ('dsnvp', 'dsNVP'), ('triple_arv', 'triple ARV')], max_length=25, null=True, verbose_name='Please specify type of antiretrovirals received during pregnancy: ')),
                ('infant_prohylaxis', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], max_length=25, verbose_name='Did the individual receive infant prophylaxis in the 1st month of life?')),
                ('infant_prohylaxis_rx', models.CharField(blank=True, choices=[('sdnvp', 'sdNVP'), ('azt', 'AZT'), ('extended_nvp', 'Extended NVP')], max_length=25, null=True, verbose_name='Please specify type of infant prophylaxis in the 1st month of life ')),
                ('counseling', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], max_length=25, verbose_name='Did this person receive adherence counseling?')),
                ('counseling_date', models.DateField(blank=True, null=True, verbose_name='Date of Adherence Counseling')),
                ('adherence_partner_rel', models.CharField(blank=True, choices=[('mother', 'Mother'), ('father', 'Father'), ('grandmother', 'Grandmother'), ('grandfather', 'Grandfather'), ('aunt', 'Aunt'), ('uncle', 'Uncle'), ('partner_or_spouse', 'Partner or Spouse'), ('sister', 'Sister'), ('brother', 'Brother'), ('friend', 'Friend'), ('legal_guardian', 'Legal Guardian'), ('OTHER', 'Other (describe)'), ('unable_to_ascertain', 'Unable to Ascertain')], max_length=25, null=True, verbose_name='Relationship of Adherence Partner to Individual')),
                ('adherence_partner_rel_other', models.CharField(blank=True, max_length=25, null=True, verbose_name='Please describe  "Other" relationship')),
                ('art_history', models.ManyToManyField(to='ba_namotswe.ARTRegimen', verbose_name='Prior History of ARV Treatments')),
            ],
        ),
        migrations.AddField(
            model_name='assessmenthistory',
            name='subject_visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ba_namotswe.SubjectVisit'),
        ),
        migrations.AddField(
            model_name='abstraction',
            name='art_history',
            field=models.ManyToManyField(help_text='Please select all ART regimens since last visit', to='ba_namotswe.ARTRegimen', verbose_name='ARV regimens'),
        ),
        migrations.AddField(
            model_name='abstraction',
            name='io_history',
            field=models.ManyToManyField(to='ba_namotswe.Oi', verbose_name='Opportunistic Infections Since last visit'),
        ),
        migrations.AddField(
            model_name='abstraction',
            name='subject_visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ba_namotswe.SubjectVisit'),
        ),
    ]
